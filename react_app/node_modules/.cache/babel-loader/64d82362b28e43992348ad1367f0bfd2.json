{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\klodv\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\react-p\\\\ReactDRF\\\\react_app\\\\src\\\\pages\\\\RestAPI.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState, useRef } from 'react'; // import './RestAPI.css';\n\nimport axios from 'axios'; // fetch 보단 axios를 사용하자\n\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css'; // react-image-crop 별로임 canvas를 써야되는데 코드도 길고 레퍼런스가 너무 옛날꺼임\n\nimport { FileUploader } from \"react-drag-drop-files\";\nimport { InboxOutlined } from '@ant-design/icons';\nimport { message, Upload } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Dragger\n} = Upload;\nconst props = {\n  name: 'file',\n  multiple: true,\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\n  onChange(info) {\n    const {\n      status\n    } = info.file;\n\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n\n  onDrop(e) {\n    console.log('Dropped files', e.dataTransfer.files);\n  }\n\n};\n\nfunction RestAPI() {\n  _s();\n\n  const [text, setText] = useState('test');\n  const [Img, setImg] = useState('');\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState('');\n  const cropperRef = useRef(null); // 유저가 첨부한 이미지\n\n  const [inputImage, setInputImage] = useState(null); // 유저가 선택한 영역만큼 크롭된 이미지\n\n  const [croppedImage, setCroppedImage] = useState(null);\n\n  const onCrop = () => {\n    const imageElement = cropperRef === null || cropperRef === void 0 ? void 0 : cropperRef.current;\n    const cropper = imageElement === null || imageElement === void 0 ? void 0 : imageElement.cropper;\n    setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n  };\n\n  const dataURLtoFile = () => {\n    let dataurl = {\n      croppedImage\n    }['croppedImage']; // console.log(dataurl)\n\n    var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    var file = new File([u8arr], 'base64_to_img.jpg', {\n      type: mime\n    });\n    console.log(file); // console.log(typeof(file))\n    // console.log(file.name)\n    // console.log(typeof(file.name))\n\n    const fd = new FormData();\n    fd.append('image', file);\n    fd.append('title', file.name);\n    axios.post('http://127.0.0.1:8000/api/image/', fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (response) {\n      console.log(response);\n      response['status'] === 200 || 201 ? console.log('ITS 200 OR 201') : console.log('ITS not working!');\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const fileTypes = [\"JPEG\", \"PNG\", \"GIF\"];\n  const [file, setFile] = useState(null);\n\n  const handleChange = file => {\n    setFile(file);\n    console.log(file[0]);\n    console.log(typeof file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hello To Drag & Drop Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n          multiple: true,\n          handleChange: handleChange,\n          name: \"file\",\n          types: fileTypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: file ? `File name: ${file[0].name}` : \"no files uploaded yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dragger, { ...props,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ant-upload-drag-icon\",\n            children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ant-upload-text\",\n            children: \"Click or drag file to this area to upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ant-upload-hint\",\n            children: \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: file && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Cropper, {\n              src: file // crop={onCrop}\n              ,\n              ref: cropperRef,\n              style: {\n                height: 400,\n                width: \"100%\"\n              },\n              initialAspectRatio: 16 / 9\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log(typeof {\n                  croppedImage\n                }['croppedImage']);\n              },\n              children: \"CROP LOG type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log({\n                  croppedImage\n                });\n              },\n              children: \"CROP LOG\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onCrop,\n              children: \"CROP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"img/*\",\n        onChange: e => {\n          setInputImage(URL.createObjectURL(e.target.files[0]));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        multiple: true,\n        handleChange: handleChange,\n        name: \"file\",\n        types: fileTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        type: \"file\",\n        accept: \"img/*\",\n        onChange: e => {\n          handleChange(URL.createObjectURL(e.target.file[0]));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FileUploader, {\n        type: \"file\",\n        accept: \"img/*\",\n        onChange: e => {\n          setInputImage(URL.createObjectURL(e.target.files[0]));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), inputImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Cropper, {\n          src: inputImage // crop={onCrop}\n          ,\n          ref: cropperRef,\n          style: {\n            height: 400,\n            width: \"100%\"\n          },\n          initialAspectRatio: 16 / 9\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log(typeof {\n              croppedImage\n            }['croppedImage']);\n          },\n          children: \"CROP LOG type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log({\n              croppedImage\n            });\n          },\n          children: \"CROP LOG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCrop,\n          children: \"CROP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: croppedImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: dataURLtoFile,\n          children: \"base64Image to imagefile POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DRF CONNECTING TEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          axios.get('http://127.0.0.1:8000/api/image').then(response => {\n            // let copy = response.data['results'] \n            // setText(response.data['results'][4].image);\n            // console.log('response.data-> ', typeof(response.data));\n            console.log('response-> ', response['status']); // console.log(response.data['results']);\n            // console.log(typeof(response.data['results'][0].image));\n            // console.log(response.data['results']);\n\n            setImg(response.data['results'][4].image);\n          }).catch(function (error) {\n            console.log(error);\n          });\n        },\n        children: \"GET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"img/*\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"img/*\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"img/*\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log({\n              image\n            }['image']);\n          },\n          children: \"Post log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log({\n              title\n            }['title']);\n          },\n          children: \"Post log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const formdata = new FormData();\n            formdata.append('image', {\n              image\n            }['image']);\n            formdata.append('title', {\n              title\n            }['title']);\n            axios.post('http://127.0.0.1:8000/api/image/', formdata).then(function (response) {\n              console.log(response);\n            }).catch(function (error) {\n              console.log(error);\n              console.log({\n                title\n              }['title']);\n              console.log(typeof {\n                image\n              }['image']);\n              console.log({\n                image\n              }['image']);\n            });\n          },\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RestAPI, \"3m4Bu9nNR504FBNRz0yVBpqOvqo=\");\n\n_c = RestAPI;\nexport default RestAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestAPI\");","map":{"version":3,"names":["React","useState","useRef","axios","Cropper","FileUploader","InboxOutlined","message","Upload","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","success","error","onDrop","e","dataTransfer","files","RestAPI","text","setText","Img","setImg","title","setTitle","image","setImage","cropperRef","inputImage","setInputImage","croppedImage","setCroppedImage","onCrop","imageElement","current","cropper","getCroppedCanvas","toDataURL","dataURLtoFile","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","fd","FormData","append","post","headers","then","response","catch","fileTypes","setFile","handleChange","height","width","URL","createObjectURL","target","get","data","value","formdata"],"sources":["C:/Users/klodv/OneDrive/바탕 화면/react-p/ReactDRF/react_app/src/pages/RestAPI.js"],"sourcesContent":["/* eslint-disable */\r\n\r\nimport React, { useState, useRef} from 'react';\r\n// import './RestAPI.css';\r\nimport axios from 'axios'; // fetch 보단 axios를 사용하자\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css'; // react-image-crop 별로임 canvas를 써야되는데 코드도 길고 레퍼런스가 너무 옛날꺼임\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { message, Upload } from 'antd';\r\n\r\nconst { Dragger } = Upload;\r\nconst props = {\r\n  name: 'file',\r\n  multiple: true,\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\r\n  onChange(info) {\r\n    const { status } = info.file;\r\n\r\n    if (status !== 'uploading') {\r\n      console.log(info.file, info.fileList);\r\n    }\r\n\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  },\r\n\r\n  onDrop(e) {\r\n    console.log('Dropped files', e.dataTransfer.files);\r\n  },\r\n};\r\n\r\nfunction RestAPI() {\r\n    const [text, setText] = useState('test');\r\n    const [Img, setImg] = useState('');\r\n\r\n    const [title , setTitle] = useState(\"\");\r\n    const [image , setImage] = useState('');\r\n    \r\n    const cropperRef = useRef(null);\r\n    // 유저가 첨부한 이미지\r\n    const [inputImage, setInputImage] = useState(null);\r\n    // 유저가 선택한 영역만큼 크롭된 이미지\r\n    const [croppedImage, setCroppedImage] = useState(null);\r\n\r\n    const onCrop = () => {\r\n        const imageElement = cropperRef?.current;\r\n        const cropper = imageElement?.cropper;\r\n        setCroppedImage(cropper.getCroppedCanvas().toDataURL());\r\n    };  \r\n\r\n    const dataURLtoFile = () => {\r\n        let dataurl = {croppedImage}['croppedImage']\r\n        // console.log(dataurl)\r\n        var arr = dataurl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr[1]), \r\n            n = bstr.length, \r\n            u8arr = new Uint8Array(n);\r\n            \r\n        while(n--){\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        \r\n        var file = new File([u8arr], 'base64_to_img.jpg', {type:mime});\r\n        console.log(file)\r\n        // console.log(typeof(file))\r\n        // console.log(file.name)\r\n        // console.log(typeof(file.name))\r\n        const fd = new FormData();\r\n        fd.append('image', file);\r\n        fd.append('title', file.name);\r\n        axios\r\n        .post('http://127.0.0.1:8000/api/image/', fd, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        .then(function(response){\r\n            console.log(response);\r\n            response['status'] === 200 || 201 ? console.log('ITS 200 OR 201') : console.log('ITS not working!')\r\n            \r\n        })\r\n        .catch(function(error){\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const fileTypes = [\"JPEG\", \"PNG\", \"GIF\"];\r\n\r\n\r\n      const [file, setFile] = useState(null);\r\n      const handleChange = (file) => {\r\n        setFile(file);\r\n        console.log(file[0])\r\n        console.log(typeof(file))\r\n\r\n      };\r\n      \r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n            <div className=\"App\">\r\n          <h1>Hello To Drag & Drop Files</h1>\r\n          <FileUploader\r\n            multiple={true}\r\n            handleChange={handleChange}\r\n            name=\"file\"\r\n            types={fileTypes}\r\n          />\r\n          <p>{file ? `File name: ${file[0].name}` : \"no files uploaded yet\"}</p>\r\n\r\n          <Dragger {...props}>\r\n              <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n              </p>\r\n              <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n              <p className=\"ant-upload-hint\">\r\n              Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n              band files\r\n              </p>\r\n            </Dragger>\r\n\r\n          <div>{file && (\r\n                    <div>\r\n                        <Cropper\r\n                            src={file}\r\n                            // crop={onCrop}\r\n                            ref={cropperRef}\r\n                            style={{ height: 400, width: \"100%\" }}\r\n                            initialAspectRatio={16 / 9}\r\n                        />\r\n                        \r\n                        <button onClick={()=>{console.log(typeof({croppedImage}['croppedImage']))}}>CROP LOG type</button>\r\n                        <button onClick={()=>{console.log({croppedImage})}}>CROP LOG</button>\r\n                        <button onClick={onCrop}>CROP</button>\r\n                        \r\n                    </div>\r\n                )}</div>\r\n        </div>\r\n                <input type='file' accept='img/*' onChange={(e)=>{setInputImage(URL.createObjectURL(e.target.files[0]))}}></input>\r\n                <FileUploader\r\n                    multiple={true}\r\n                    handleChange={handleChange}\r\n                    name=\"file\"\r\n                    types={fileTypes}\r\n                />\r\n                <FileUploader type='file' accept='img/*' onChange={(e)=>{handleChange(URL.createObjectURL(e.target.file[0]))}}/>\r\n                <FileUploader type='file' accept='img/*' onChange={(e)=>{setInputImage(URL.createObjectURL(e.target.files[0]))}}/>\r\n\r\n                {inputImage && (\r\n                    <div>\r\n                        <Cropper\r\n                            src={inputImage}\r\n                            // crop={onCrop}\r\n                            ref={cropperRef}\r\n                            style={{ height: 400, width: \"100%\" }}\r\n                            initialAspectRatio={16 / 9}\r\n                        />\r\n                        \r\n                        <button onClick={()=>{console.log(typeof({croppedImage}['croppedImage']))}}>CROP LOG type</button>\r\n                        <button onClick={()=>{console.log({croppedImage})}}>CROP LOG</button>\r\n                        <button onClick={onCrop}>CROP</button>\r\n                        \r\n                    </div>\r\n                )}\r\n                \r\n                \r\n                {croppedImage && (\r\n                    <div>\r\n                        <img src={croppedImage} />\r\n                        <button onClick={dataURLtoFile}>base64Image to imagefile POST</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n                \r\n            \r\n            <h1>DRF CONNECTING TEST</h1>\r\n            <div className=''>\r\n                <button\r\n                onClick={() => {\r\n                    axios\r\n                        .get('http://127.0.0.1:8000/api/image')\r\n                        .then((response) => {\r\n                            // let copy = response.data['results'] \r\n                            // setText(response.data['results'][4].image);\r\n                            // console.log('response.data-> ', typeof(response.data));\r\n                            console.log('response-> ', response['status']);\r\n                            // console.log(response.data['results']);\r\n                            // console.log(typeof(response.data['results'][0].image));\r\n                            // console.log(response.data['results']);\r\n                            setImg(response.data['results'][4].image);\r\n                        })\r\n                        .catch(function(error){\r\n                            console.log(error);\r\n                        });\r\n                }}\r\n                >\r\n                GET\r\n                </button>\r\n                \r\n                <p>\r\n                    <img src={Img} />\r\n                </p>\r\n                <div>\r\n                    <input type='file' accept='img/*' onChange={(e)=>setImage(e.target.files[0])}></input>\r\n                    <input type='file' accept='img/*' onChange={(e)=>setImage(e.target.files[0])}></input>\r\n                    <input type='file' accept='img/*' onChange={(e)=>setImage(e.target.files[0])}></input>\r\n                    <button onClick={()=>{console.log({image}['image'])}}>Post log</button>\r\n                    <button onClick={()=>{console.log({title}['title'])}}>Post log</button>\r\n                    <input \r\n                        placeholder='title'\r\n                        value={title}\r\n                        onChange={(e)=>setTitle(e.target.value)}\r\n                    />\r\n                    <button\r\n                    onClick={()=>{\r\n                        const formdata = new FormData();\r\n                        formdata.append('image', {image}['image']);\r\n                        formdata.append('title', {title}['title']);\r\n\r\n                        axios\r\n                        .post('http://127.0.0.1:8000/api/image/', formdata)\r\n                        .then(function(response){\r\n                            console.log(response);\r\n                        })\r\n                        .catch(function(error){\r\n                            console.log(error);\r\n                            console.log({title}['title'])\r\n                            console.log(typeof({image}['image']))\r\n                            console.log({image}['image'])\r\n                        });\r\n                    }}\r\n                    >\r\n                    POST\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {/* <button\r\n                    onClick={() => {\r\n                        axios\r\n                            .get('http://127.0.0.1:8000/ML/')\r\n                            .then((response) => {\r\n                                setText(response.data);\r\n                                console.log(response)\r\n                            })\r\n                            .catch(function(error){\r\n                                console.log(error);\r\n                            });\r\n                    }}\r\n                    >\r\n                    GET HTTP !\r\n                    </button> */}\r\n                <p>\r\n                    {text}\r\n                </p>\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default RestAPI;"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,4BAAP,C,CAAqC;;AACrC,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;;AAEA,MAAM;EAAEC;AAAF,IAAcD,MAApB;AACA,MAAME,KAAK,GAAG;EACZC,IAAI,EAAE,MADM;EAEZC,QAAQ,EAAE,IAFE;EAGZC,MAAM,EAAE,kDAHI;;EAKZC,QAAQ,CAACC,IAAD,EAAO;IACb,MAAM;MAAEC;IAAF,IAAaD,IAAI,CAACE,IAAxB;;IAEA,IAAID,MAAM,KAAK,WAAf,EAA4B;MAC1BE,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACK,QAA5B;IACD;;IAED,IAAIJ,MAAM,KAAK,MAAf,EAAuB;MACrBT,OAAO,CAACc,OAAR,CAAiB,GAAEN,IAAI,CAACE,IAAL,CAAUN,IAAK,8BAAlC;IACD,CAFD,MAEO,IAAIK,MAAM,KAAK,OAAf,EAAwB;MAC7BT,OAAO,CAACe,KAAR,CAAe,GAAEP,IAAI,CAACE,IAAL,CAAUN,IAAK,sBAAhC;IACD;EACF,CAjBW;;EAmBZY,MAAM,CAACC,CAAD,EAAI;IACRN,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,CAAC,CAACC,YAAF,CAAeC,KAA5C;EACD;;AArBW,CAAd;;AAwBA,SAASC,OAAT,GAAmB;EAAA;;EACf,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,MAAD,CAAhC;EACA,MAAM,CAAC6B,GAAD,EAAMC,MAAN,IAAgB9B,QAAQ,CAAC,EAAD,CAA9B;EAEA,MAAM,CAAC+B,KAAD,EAASC,QAAT,IAAqBhC,QAAQ,CAAC,EAAD,CAAnC;EACA,MAAM,CAACiC,KAAD,EAASC,QAAT,IAAqBlC,QAAQ,CAAC,EAAD,CAAnC;EAEA,MAAMmC,UAAU,GAAGlC,MAAM,CAAC,IAAD,CAAzB,CAPe,CAQf;;EACA,MAAM,CAACmC,UAAD,EAAaC,aAAb,IAA8BrC,QAAQ,CAAC,IAAD,CAA5C,CATe,CAUf;;EACA,MAAM,CAACsC,YAAD,EAAeC,eAAf,IAAkCvC,QAAQ,CAAC,IAAD,CAAhD;;EAEA,MAAMwC,MAAM,GAAG,MAAM;IACjB,MAAMC,YAAY,GAAGN,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEO,OAAjC;IACA,MAAMC,OAAO,GAAGF,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEE,OAA9B;IACAJ,eAAe,CAACI,OAAO,CAACC,gBAAR,GAA2BC,SAA3B,EAAD,CAAf;EACH,CAJD;;EAMA,MAAMC,aAAa,GAAG,MAAM;IACxB,IAAIC,OAAO,GAAG;MAACT;IAAD,EAAe,cAAf,CAAd,CADwB,CAExB;;IACA,IAAIU,GAAG,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAV;IAAA,IACIC,IAAI,GAAGF,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAP,CAAa,SAAb,EAAwB,CAAxB,CADX;IAAA,IAEIC,IAAI,GAAGC,IAAI,CAACL,GAAG,CAAC,CAAD,CAAJ,CAFf;IAAA,IAGIM,CAAC,GAAGF,IAAI,CAACG,MAHb;IAAA,IAIIC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CAJZ;;IAMA,OAAMA,CAAC,EAAP,EAAU;MACNE,KAAK,CAACF,CAAD,CAAL,GAAWF,IAAI,CAACM,UAAL,CAAgBJ,CAAhB,CAAX;IACH;;IAED,IAAItC,IAAI,GAAG,IAAI2C,IAAJ,CAAS,CAACH,KAAD,CAAT,EAAkB,mBAAlB,EAAuC;MAACI,IAAI,EAACV;IAAN,CAAvC,CAAX;IACAjC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAdwB,CAexB;IACA;IACA;;IACA,MAAM6C,EAAE,GAAG,IAAIC,QAAJ,EAAX;IACAD,EAAE,CAACE,MAAH,CAAU,OAAV,EAAmB/C,IAAnB;IACA6C,EAAE,CAACE,MAAH,CAAU,OAAV,EAAmB/C,IAAI,CAACN,IAAxB;IACAR,KAAK,CACJ8D,IADD,CACM,kCADN,EAC0CH,EAD1C,EAC8C;MAC1CI,OAAO,EAAE;QACP,gBAAgB;MADT;IADiC,CAD9C,EAMCC,IAND,CAMM,UAASC,QAAT,EAAkB;MACpBlD,OAAO,CAACC,GAAR,CAAYiD,QAAZ;MACAA,QAAQ,CAAC,QAAD,CAAR,KAAuB,GAAvB,IAA8B,GAA9B,GAAoClD,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAApC,GAAoED,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAApE;IAEH,CAVD,EAWCkD,KAXD,CAWO,UAAS/C,KAAT,EAAe;MAClBJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;IACH,CAbD;EAcH,CAnCD;;EAqCA,MAAMgD,SAAS,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,CAAlB;EAGE,MAAM,CAACrD,IAAD,EAAOsD,OAAP,IAAkBtE,QAAQ,CAAC,IAAD,CAAhC;;EACA,MAAMuE,YAAY,GAAIvD,IAAD,IAAU;IAC7BsD,OAAO,CAACtD,IAAD,CAAP;IACAC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB;IACAC,OAAO,CAACC,GAAR,CAAY,OAAOF,IAAnB;EAED,CALD;;EASF,oBACI;IAAA,wBACI;MAAA,wBACA;QAAK,SAAS,EAAC,KAAf;QAAA,wBACF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADE,eAEF,QAAC,YAAD;UACE,QAAQ,EAAE,IADZ;UAEE,YAAY,EAAEuD,YAFhB;UAGE,IAAI,EAAC,MAHP;UAIE,KAAK,EAAEF;QAJT;UAAA;UAAA;UAAA;QAAA,QAFE,eAQF;UAAA,UAAIrD,IAAI,GAAI,cAAaA,IAAI,CAAC,CAAD,CAAJ,CAAQN,IAAK,EAA9B,GAAkC;QAA1C;UAAA;UAAA;UAAA;QAAA,QARE,eAUF,QAAC,OAAD,OAAaD,KAAb;UAAA,wBACI;YAAG,SAAS,EAAC,sBAAb;YAAA,uBACE,QAAC,aAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAG,SAAS,EAAC,iBAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAG,SAAS,EAAC,iBAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAVE,eAqBF;UAAA,UAAMO,IAAI,iBACA;YAAA,wBACI,QAAC,OAAD;cACI,GAAG,EAAEA,IADT,CAEI;cAFJ;cAGI,GAAG,EAAEmB,UAHT;cAII,KAAK,EAAE;gBAAEqC,MAAM,EAAE,GAAV;gBAAeC,KAAK,EAAE;cAAtB,CAJX;cAKI,kBAAkB,EAAE,KAAK;YAL7B;cAAA;cAAA;cAAA;YAAA,QADJ,eASI;cAAQ,OAAO,EAAE,MAAI;gBAACxD,OAAO,CAACC,GAAR,CAAY,OAAO;kBAACoB;gBAAD,EAAe,cAAf,CAAnB;cAAoD,CAA1E;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QATJ,eAUI;cAAQ,OAAO,EAAE,MAAI;gBAACrB,OAAO,CAACC,GAAR,CAAY;kBAACoB;gBAAD,CAAZ;cAA4B,CAAlD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAVJ,eAWI;cAAQ,OAAO,EAAEE,MAAjB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAXJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADV;UAAA;UAAA;UAAA;QAAA,QArBE;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAuCI;QAAO,IAAI,EAAC,MAAZ;QAAmB,MAAM,EAAC,OAA1B;QAAkC,QAAQ,EAAGjB,CAAD,IAAK;UAACc,aAAa,CAACqC,GAAG,CAACC,eAAJ,CAAoBpD,CAAC,CAACqD,MAAF,CAASnD,KAAT,CAAe,CAAf,CAApB,CAAD,CAAb;QAAsD;MAAxG;QAAA;QAAA;QAAA;MAAA,QAvCJ,eAwCI,QAAC,YAAD;QACI,QAAQ,EAAE,IADd;QAEI,YAAY,EAAE8C,YAFlB;QAGI,IAAI,EAAC,MAHT;QAII,KAAK,EAAEF;MAJX;QAAA;QAAA;QAAA;MAAA,QAxCJ,eA8CI,QAAC,YAAD;QAAc,IAAI,EAAC,MAAnB;QAA0B,MAAM,EAAC,OAAjC;QAAyC,QAAQ,EAAG9C,CAAD,IAAK;UAACgD,YAAY,CAACG,GAAG,CAACC,eAAJ,CAAoBpD,CAAC,CAACqD,MAAF,CAAS5D,IAAT,CAAc,CAAd,CAApB,CAAD,CAAZ;QAAoD;MAA7G;QAAA;QAAA;QAAA;MAAA,QA9CJ,eA+CI,QAAC,YAAD;QAAc,IAAI,EAAC,MAAnB;QAA0B,MAAM,EAAC,OAAjC;QAAyC,QAAQ,EAAGO,CAAD,IAAK;UAACc,aAAa,CAACqC,GAAG,CAACC,eAAJ,CAAoBpD,CAAC,CAACqD,MAAF,CAASnD,KAAT,CAAe,CAAf,CAApB,CAAD,CAAb;QAAsD;MAA/G;QAAA;QAAA;QAAA;MAAA,QA/CJ,EAiDKW,UAAU,iBACP;QAAA,wBACI,QAAC,OAAD;UACI,GAAG,EAAEA,UADT,CAEI;UAFJ;UAGI,GAAG,EAAED,UAHT;UAII,KAAK,EAAE;YAAEqC,MAAM,EAAE,GAAV;YAAeC,KAAK,EAAE;UAAtB,CAJX;UAKI,kBAAkB,EAAE,KAAK;QAL7B;UAAA;UAAA;UAAA;QAAA,QADJ,eASI;UAAQ,OAAO,EAAE,MAAI;YAACxD,OAAO,CAACC,GAAR,CAAY,OAAO;cAACoB;YAAD,EAAe,cAAf,CAAnB;UAAoD,CAA1E;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATJ,eAUI;UAAQ,OAAO,EAAE,MAAI;YAACrB,OAAO,CAACC,GAAR,CAAY;cAACoB;YAAD,CAAZ;UAA4B,CAAlD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAVJ,eAWI;UAAQ,OAAO,EAAEE,MAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAlDR,EAmEKF,YAAY,iBACT;QAAA,wBACI;UAAK,GAAG,EAAEA;QAAV;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,OAAO,EAAEQ,aAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QApER;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eA6EI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA7EJ,eA8EI;MAAK,SAAS,EAAC,EAAf;MAAA,wBACI;QACA,OAAO,EAAE,MAAM;UACX5C,KAAK,CACA2E,GADL,CACS,iCADT,EAEKX,IAFL,CAEWC,QAAD,IAAc;YAChB;YACA;YACA;YACAlD,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BiD,QAAQ,CAAC,QAAD,CAAnC,EAJgB,CAKhB;YACA;YACA;;YACArC,MAAM,CAACqC,QAAQ,CAACW,IAAT,CAAc,SAAd,EAAyB,CAAzB,EAA4B7C,KAA7B,CAAN;UACH,CAXL,EAYKmC,KAZL,CAYW,UAAS/C,KAAT,EAAe;YAClBJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;UACH,CAdL;QAeH,CAjBD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAuBI;QAAA,uBACI;UAAK,GAAG,EAAEQ;QAAV;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAvBJ,eA0BI;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAmB,MAAM,EAAC,OAA1B;UAAkC,QAAQ,EAAGN,CAAD,IAAKW,QAAQ,CAACX,CAAC,CAACqD,MAAF,CAASnD,KAAT,CAAe,CAAf,CAAD;QAAzD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,MAAZ;UAAmB,MAAM,EAAC,OAA1B;UAAkC,QAAQ,EAAGF,CAAD,IAAKW,QAAQ,CAACX,CAAC,CAACqD,MAAF,CAASnD,KAAT,CAAe,CAAf,CAAD;QAAzD;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAO,IAAI,EAAC,MAAZ;UAAmB,MAAM,EAAC,OAA1B;UAAkC,QAAQ,EAAGF,CAAD,IAAKW,QAAQ,CAACX,CAAC,CAACqD,MAAF,CAASnD,KAAT,CAAe,CAAf,CAAD;QAAzD;UAAA;UAAA;UAAA;QAAA,QAHJ,eAII;UAAQ,OAAO,EAAE,MAAI;YAACR,OAAO,CAACC,GAAR,CAAY;cAACe;YAAD,EAAQ,OAAR,CAAZ;UAA8B,CAApD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAKI;UAAQ,OAAO,EAAE,MAAI;YAAChB,OAAO,CAACC,GAAR,CAAY;cAACa;YAAD,EAAQ,OAAR,CAAZ;UAA8B,CAApD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALJ,eAMI;UACI,WAAW,EAAC,OADhB;UAEI,KAAK,EAAEA,KAFX;UAGI,QAAQ,EAAGR,CAAD,IAAKS,QAAQ,CAACT,CAAC,CAACqD,MAAF,CAASG,KAAV;QAH3B;UAAA;UAAA;UAAA;QAAA,QANJ,eAWI;UACA,OAAO,EAAE,MAAI;YACT,MAAMC,QAAQ,GAAG,IAAIlB,QAAJ,EAAjB;YACAkB,QAAQ,CAACjB,MAAT,CAAgB,OAAhB,EAAyB;cAAC9B;YAAD,EAAQ,OAAR,CAAzB;YACA+C,QAAQ,CAACjB,MAAT,CAAgB,OAAhB,EAAyB;cAAChC;YAAD,EAAQ,OAAR,CAAzB;YAEA7B,KAAK,CACJ8D,IADD,CACM,kCADN,EAC0CgB,QAD1C,EAECd,IAFD,CAEM,UAASC,QAAT,EAAkB;cACpBlD,OAAO,CAACC,GAAR,CAAYiD,QAAZ;YACH,CAJD,EAKCC,KALD,CAKO,UAAS/C,KAAT,EAAe;cAClBJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;cACAJ,OAAO,CAACC,GAAR,CAAY;gBAACa;cAAD,EAAQ,OAAR,CAAZ;cACAd,OAAO,CAACC,GAAR,CAAY,OAAO;gBAACe;cAAD,EAAQ,OAAR,CAAnB;cACAhB,OAAO,CAACC,GAAR,CAAY;gBAACe;cAAD,EAAQ,OAAR,CAAZ;YACH,CAVD;UAWH,CAjBD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA,QA1BJ;IAAA;MAAA;MAAA;MAAA;IAAA,QA9EJ,eA0II;MAAA,uBAgBI;QAAA,UACKN;MADL;QAAA;QAAA;QAAA;MAAA;IAhBJ;MAAA;MAAA;MAAA;IAAA,QA1IJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiKH;;GAtOQD,O;;KAAAA,O;AAwOT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}