[{"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\index.js":"1","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\reportWebVitals.js":"2","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\App.js":"3","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\RestAPI.js":"4","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\ImageList.js":"5","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\Signup.js":"6","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\Login.js":"7","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\Main.js":"8","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\components\\Footer.js":"9","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\components\\Navbar.js":"10"},{"size":555,"mtime":1659690279779,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1659078051887,"results":"13","hashOfConfig":"12"},{"size":1251,"mtime":1660209897296,"results":"14","hashOfConfig":"12"},{"size":5566,"mtime":1659780004021,"results":"15","hashOfConfig":"12"},{"size":1693,"mtime":1659078051878,"results":"16","hashOfConfig":"12"},{"size":1639,"mtime":1660210788634,"results":"17","hashOfConfig":"12"},{"size":1117,"mtime":1660211230881,"results":"18","hashOfConfig":"12"},{"size":4559,"mtime":1660728196108,"results":"19","hashOfConfig":"12"},{"size":852,"mtime":1659759714769,"results":"20","hashOfConfig":"12"},{"size":5695,"mtime":1660376094852,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1vlo1h1",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"25"},"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\index.js",[],[],[],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\reportWebVitals.js",[],[],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\App.js",[],[],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\RestAPI.js",[],["55"],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\ImageList.js",["56","57"],[],"import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nfunction ImageList() {\r\n    const [imgList, setImgListData] = useState([{\r\n        id: null,\r\n        image: null,\r\n        title: null,\r\n    }])\r\n    \r\n    // useEffect(async() => { //uesEffect 에서 async로 axios 사용 시 error 발생\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            console.log('Img List ON screen');\r\n            try{\r\n                const res = await axios.get('http://127.0.0.1:8000/image')\r\n                console.log(res.data['results'])\r\n                const _imgList = await res.data['results'].map((rowData) => ({\r\n                    id: rowData.id,\r\n                    title: rowData.title,\r\n                    image: rowData.image\r\n                    })\r\n                )\r\n                // setImgListData(..._imgList);\r\n                setImgListData(imgList.concat(_imgList));\r\n            } catch(e){\r\n                console.error(e.message)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n  return (\r\n    <>\r\n        <div className='list'>\r\n            <button onClick={()=>{console.log(imgList)}}>Get</button>\r\n            <h1>Image List</h1>\r\n            {imgList.filter(data => data.id !== null).map((data)=>{\r\n                return (\r\n                    <div className='imageList' key={data.id}>\r\n                        <h3>{data.id}</h3>\r\n                        <h3>{data.title}</h3>\r\n                        <img src={data.image} width='600' height='400'/>\r\n                        <hr/>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImageList","C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\Signup.js",[],[],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\Login.js",[],[],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\pages\\Main.js",["58","59","60","61","62","63","64","65"],[],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\components\\Footer.js",[],[],"C:\\ai\\final\\react-p\\ReactDRF\\react_app\\src\\components\\Navbar.js",["66"],[],"import React, { useEffect, useState } from \"react\";\r\n// import styled from \"@emotion/styled\";\r\nimport classes from \"./Navbar.module.scss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport mainlogo from '../components/img/mainlogo.png';\r\nimport styled from \"styled-components\";\r\n\r\nconst MenuLabel = styled.label`\r\n  background-color: rgb(155, 182, 99, 50%);\r\n  position: fixed;\r\n  top: 3%;\r\n  right: 3%;\r\n  border-radius: 50%;\r\n  height: 3.5rem;\r\n  width: 3.5rem;\r\n  cursor: pointer;\r\n  z-index: 1000;\r\n  box-shadow: 0 1rem 3rem rgba(182, 237, 200, 0.3);\r\n  text-align: center;\r\n`;\r\n\r\nconst Icon = styled.span`\r\n  position: relative;\r\n  background-color: ${(props) => (props.clicked ? \"transparent\" : \"black\")};\r\n  width: 2rem;\r\n  height: 2px;\r\n  display: inline-block;\r\n  margin-top: 1.2px;\r\n  margin-bottom : 6.7px;\r\n  transition: all 0.3s;\r\n  &::before,\r\n  &::after {\r\n    content: \"\";\r\n    background-color: black;\r\n    width: 2rem;\r\n    height: 2px;\r\n    display: inline-block;\r\n    position: absolute;\r\n    left: 0;\r\n    transition: all 0.3s;\r\n  }\r\n  &::before {\r\n    top: ${(props) => (props.clicked ? \"0\" : \"-0.8rem\")};\r\n    transform: ${(props) => (props.clicked ? \"rotate(135deg)\" : \"rotate(0)\")};\r\n  }\r\n  &::after {\r\n    top: ${(props) => (props.clicked ? \"0\" : \"0.8rem\")};\r\n    transform: ${(props) => (props.clicked ? \"rotate(-135deg)\" : \"rotate(0)\")};\r\n  }\r\n  ${MenuLabel}:hover &::before {\r\n    top: ${(props) => (props.clicked ? \"0\" : \"-1rem\")};\r\n  }\r\n  ${MenuLabel}:hover &::after {\r\n    top: ${(props) => (props.clicked ? \"0\" : \"1rem\")};\r\n  }\r\n`;\r\n\r\n\r\n \r\n\r\n\r\nconst Navbar = () => {\r\n    \r\n    const navigate = useNavigate();\r\n    const [menuOpen, setMenuOpen] = useState(false);\r\n    const [size, setSize] = useState({\r\n        width: undefined,\r\n        height: undefined,\r\n    });\r\n    const handleClick = () => setMenuOpen(!menuOpen);\r\n  \r\n    const [ScrollY, setScrollY] = useState(0); // window 의 pageYOffset값을 저장\r\n    const [ScrollActive, setScrollActive] = useState(false);\r\n    function handleScroll() {\r\n        if (ScrollY > 50) {\r\n            setScrollY(window.pageYOffset);\r\n            setScrollActive(true);\r\n        } else {\r\n            setScrollY(window.pageYOffset);\r\n        setScrollActive(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        function scrollListener() {\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n        } //  window 에서 스크롤을 감시 시작\r\n    scrollListener(); // window 에서 스크롤을 감시\r\n        return () => {\r\n          window.removeEventListener(\"scroll\", handleScroll);\r\n    }; //  window 에서 스크롤을 감시를 종료\r\n  });\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n            });\r\n        };\r\n        window.addEventListener(\"resize\", handleResize);\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (size.width > 890 && menuOpen) {\r\n            setMenuOpen(false);\r\n        }\r\n    }, [size.width, menuOpen]);\r\n\r\n    const menuToggleHandler = () => {\r\n        setMenuOpen((p) => !p);\r\n        \r\n    };\r\n\r\n    const ctaClickHandler = () => {\r\n        menuToggleHandler();\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <header className={classes.header} >\r\n            <div className={ScrollActive? classes.header__content : classes.header__scroll }>\r\n                <Link to=\"/1\" className={classes.header__content__logo}>\r\n                    <img className={classes.header__content__logo} src={mainlogo}/>\r\n                </Link>\r\n                <nav\r\n                    className={`${classes.header__content__nav} ${\r\n                        menuOpen && size.width < 890 ? classes.isMenu : \"\"\r\n                    }`}\r\n                >\r\n                    \r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/\" onClick={menuToggleHandler}>\r\n                                AI\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/dnd\" onClick={menuToggleHandler}>\r\n                                게시판\r\n                            \r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/RestauR\" onClick={menuToggleHandler}>\r\n                                마켓\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Inform\" onClick={menuToggleHandler}>\r\n                                회원정보\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <button onClick={ctaClickHandler}>\r\n                            Sign up\r\n\r\n                    </button>\r\n                </nav>\r\n                <div className={classes.header__content__toggle} onClick={handleClick} >\r\n                        <MenuLabel htmlFor=\"navi-toggle\" onClick={handleClick}>\r\n                            <Icon clicked={menuOpen}></Icon>\r\n                        </MenuLabel>\r\n                    {!menuOpen ? (\r\n                        <i className='fas fa-bars' onClick={menuToggleHandler} />\r\n                    ) : (\r\n                        <i className='fas fa-times' onClick={menuToggleHandler} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;",{"ruleId":"67","severity":1,"message":"68","line":151,"column":25,"nodeType":"69","endLine":151,"endColumn":51,"suppressions":"70"},{"ruleId":"71","severity":1,"message":"72","line":31,"column":8,"nodeType":"73","endLine":31,"endColumn":10,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"68","line":43,"column":25,"nodeType":"69","endLine":43,"endColumn":73},{"ruleId":"75","severity":1,"message":"76","line":8,"column":70,"nodeType":"77","messageId":"78","endLine":8,"endColumn":77},{"ruleId":"75","severity":1,"message":"79","line":8,"column":120,"nodeType":"77","messageId":"78","endLine":8,"endColumn":129},{"ruleId":"75","severity":1,"message":"80","line":8,"column":131,"nodeType":"77","messageId":"78","endLine":8,"endColumn":135},{"ruleId":"75","severity":1,"message":"81","line":8,"column":145,"nodeType":"77","messageId":"78","endLine":8,"endColumn":152},{"ruleId":"67","severity":1,"message":"68","line":83,"column":11,"nodeType":"69","endLine":83,"endColumn":50},{"ruleId":"67","severity":1,"message":"68","line":86,"column":11,"nodeType":"69","endLine":86,"endColumn":49},{"ruleId":"67","severity":1,"message":"68","line":89,"column":11,"nodeType":"69","endLine":89,"endColumn":49},{"ruleId":"67","severity":1,"message":"68","line":92,"column":11,"nodeType":"69","endLine":92,"endColumn":49},{"ruleId":"67","severity":1,"message":"68","line":131,"column":21,"nodeType":"69","endLine":131,"endColumn":84},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imgList'. Either include it or remove the dependency array. You can also do a functional update 'setImgListData(i => ...)' if you only need 'imgList' in the 'setImgListData' call.","ArrayExpression",["83"],"no-unused-vars","'FadeOut' is defined but never used.","Identifier","unusedVar","'StickyOut' is defined but never used.","'Zoom' is defined but never used.","'ZoomOut' is defined but never used.",{"kind":"84","justification":"85"},{"desc":"86","fix":"87"},"directive","","Update the dependencies array to be: [imgList]",{"range":"88","text":"89"},[1035,1037],"[imgList]"]